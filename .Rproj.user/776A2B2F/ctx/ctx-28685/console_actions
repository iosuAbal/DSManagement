{
    "type": [
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        2
    ],
    "data": [
        "+ ",
        "+ ",
        "            # Retornar un nuevo objeto AtributoDataset con los valores discretizados",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EW)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            discretized_values <- discretizeEF_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EF)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "Error en validObject(.Object): \n  invalid class “AtributoDataset” object: invalid object for slot \"nombre\" in class \"AtributoDataset\": got class \"numeric\", should be or extend class \"character\"\n",
        "> ",
        "# Constructor para la clase Dataset",
        "> ",
        "datasetFromCSV <- function(file_path, sep=\",\") {",
        "+ ",
        "  # Leer el archivo CSV en un data.frame",
        "+ ",
        "  df <- read.csv(file_path, sep=sep)",
        "+ ",
        "+ ",
        "  # Crear una lista de objetos AtributoDataset para cada columna del data.frame",
        "+ ",
        "  atributos <- lapply(names(df), function(col_name) {",
        "+ ",
        "    vector <- df[[col_name]]",
        "+ ",
        "+ ",
        "    # Crear un objeto AtributoDataset para cada columna",
        "+ ",
        "    atributo <- atributoDataset(col_name, vector)",
        "+ ",
        "+ ",
        "    return(atributo)",
        "+ ",
        "  })",
        "+ ",
        "+ ",
        "  # Crear el objeto Dataset con la lista de atributos y la clase (si se proporciona)",
        "+ ",
        "  dataset <- new(\"Dataset\", nombre=basename(file_path), atributos = atributos)",
        "+ ",
        "+ ",
        "  return(dataset)",
        "+ ",
        "}",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset@atributos[[1]], 3)",
        "An object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Janvier - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-2.633, 4.033) [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033)\n [6] (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633]  (-Inf, -2.633] \n[11] [4.033, Inf)    (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633] \n[16] (-Inf, -2.633]  (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[21] (-2.633, 4.033) (-2.633, 4.033) (-Inf, ",
        "-2.633]  (-2.633, 4.033) [4.033, Inf)   \n[26] [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[31] (-2.633, 4.033) [4.033, Inf)    [4.033, Inf)    (-Inf, -2.633]  (-2.633, 4.033)\nLevels: (-2.633, 4.033) (-Inf, -2.633] [4.033, Inf)\n\nSlot \"cortes\":\n[1] -2.633  4.033\n\n",
        "> ",
        "discretizeEF(dataset@atributos[[1]], 3)@valores",
        " [1] (-1.1, 3.4)  [3.4, Inf)   (-1.1, 3.4)  (-1.1, 3.4)  (-Inf, -1.1] (-1.1, 3.4) \n [7] [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] [3.4, Inf)   [3.4, Inf)  \n[13] [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] [3.4, Inf)   (-Inf, -1.1]\n[19] (-1.1, 3.4)  [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] (-1.1, 3.4) \n[25] [3.4, Inf)   [3.4, Inf)   (-1.1, 3.4)  (-1.1, 3.4)  (-1.1, 3.4)  [3.4, Inf)  \n[31] (-1.1, 3.4)  [3.4, Inf)   [3.4, Inf)   (-Inf, -1.1] (-1.1, 3.4) \nLevels: (-1.1, 3.4) (-Inf, ",
        "-1.1] [3.4, Inf)\n",
        "> ",
        "discretizeEF(dataset@atributos[[1]], 3)",
        "An object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Janvier - Discretized(EF)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-1.1, 3.4)  [3.4, Inf)   (-1.1, 3.4)  (-1.1, 3.4)  (-Inf, -1.1] (-1.1, 3.4) \n [7] [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] [3.4, Inf)   [3.4, Inf)  \n[13] [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] [3.4, Inf)   (-Inf, -1.1]\n[19] (-1.1, 3.4)  [3.4, Inf)   (-Inf, -1.1] (-Inf, -1.1] (-Inf, -1.1] (-1.1, 3.4) \n[25] [3.4, Inf)   [3.4, Inf)   (-1.1, 3.4)  (-1.1, 3",
        ".4)  (-1.1, 3.4)  [3.4, Inf)  \n[31] (-1.1, 3.4)  [3.4, Inf)   [3.4, Inf)   (-Inf, -1.1] (-1.1, 3.4) \nLevels: (-1.1, 3.4) (-Inf, -1.1] [3.4, Inf)\n\nSlot \"cortes\":\n[1] -1.1  3.4\n\n",
        "> ",
        "discretizeEW(dataset@atributos[[1]], 3)",
        "An object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Janvier - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-2.633, 4.033) [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033)\n [6] (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633]  (-Inf, -2.633] \n[11] [4.033, Inf)    (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633] \n[16] (-Inf, -2.633]  (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[21] (-2.633, 4.033) (-2.633, 4.033) (-Inf, ",
        "-2.633]  (-2.633, 4.033) [4.033, Inf)   \n[26] [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[31] (-2.633, 4.033) [4.033, Inf)    [4.033, Inf)    (-Inf, -2.633]  (-2.633, 4.033)\nLevels: (-2.633, 4.033) (-Inf, -2.633] [4.033, Inf)\n\nSlot \"cortes\":\n[1] -2.633  4.033\n\n",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en discretizeEW(atributo): \n  el argumento \"n_intervals\" está ausente, sin valor por omisión\n",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en discretizeEW(atributo): \n  el argumento \"n_intervals\" está ausente, sin valor por omisión\n",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intevals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo,n_intevals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en FUN(X[[i]], ...): objeto 'n_intevals' no encontrado\n",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo,n_intervals) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intevals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo, n_intervals) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intevals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en FUN(X[[i]], ...): objeto 'n_intevals' no encontrado\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en dataset(clase = obj@clase, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "#constructor",
        "> ",
        "dataset <- function (nombre, atributos) {",
        "+ ",
        "  object <- new(\"Dataset\", nombre=nombre, atributos=atributos)",
        "+ ",
        "  return(object)",
        "+ ",
        "}",
        "> ",
        "validarDataset <- function(object) {",
        "+ ",
        "  #La clase debe ser de tipo character",
        "+ ",
        "  if (!is.character(object@nombre)) {",
        "+ ",
        "    stop(\"El nombre debe ser de tipo character.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  # Atributos deben ser objetos de la clase AtributoDataset",
        "+ ",
        "  if (!all(sapply(object@atributos, function(x) \"AtributoDataset\" %in% class(x)))) {",
        "+ ",
        "    stop(\"Todos los elementos de 'atributos' deben ser de la clase 'AtributoDataset'.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if(length(object@atributos)==0){",
        "+ ",
        "    stop(\"El dataset debe tener una lista de atributos\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  return(TRUE)",
        "+ ",
        "}",
        "> ",
        "setValidity(Class=\"Dataset\", method=validarDataset)",
        "Class \"Dataset\" [in \".GlobalEnv\"]\n\nSlots:\n                          \nName:     nombre atributos\nClass: character      list\n",
        "> ",
        "# Constructor para la clase Dataset",
        "> ",
        "datasetFromCSV <- function(file_path, sep=\",\") {",
        "+ ",
        "  # Leer el archivo CSV en un data.frame",
        "+ ",
        "  df <- read.csv(file_path, sep=sep)",
        "+ ",
        "+ ",
        "  # Crear una lista de objetos AtributoDataset para cada columna del data.frame",
        "+ ",
        "  atributos <- lapply(names(df), function(col_name) {",
        "+ ",
        "    vector <- df[[col_name]]",
        "+ ",
        "+ ",
        "    # Crear un objeto AtributoDataset para cada columna",
        "+ ",
        "    atributo <- atributoDataset(col_name, vector)",
        "+ ",
        "+ ",
        "    return(atributo)",
        "+ ",
        "  })",
        "+ ",
        "+ ",
        "  # Crear el objeto Dataset con la lista de atributos y la clase (si se proporciona)",
        "+ ",
        "  dataset <- new(\"Dataset\", nombre=basename(file_path), atributos = atributos)",
        "+ ",
        "+ ",
        "  return(dataset)",
        "+ ",
        "}",
        "> ",
        "setGeneric(name=\"discretizeEW\", def=function(obj, n_intervals) standardGeneric(\"discretizeEW\"))",
        "[1] \"discretizeEW\"\n",
        "> ",
        "setGeneric(name=\"discretizeEF\", def=function(obj, n_intervals) standardGeneric(\"discretizeEF\"))",
        "[1] \"discretizeEF\"\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            # Aplicar tu función discretizeEW a los valores del objeto",
        "+ ",
        "            discretized_values <- discretizeEW_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            # Retornar un nuevo objeto AtributoDataset con los valores discretizados",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EW)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            discretized_values <- discretizeEF_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EF)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(clase = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en dataset(clase = obj@clase, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            discretized_values <- discretizeEF_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EF)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@clase, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en dataset(nombre = obj@clase, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#clase dataset",
        "> ",
        "setClass(\"Dataset\",",
        "+ ",
        "         slots = c(nombre = \"character\", ",
        "+ ",
        "                   atributos = \"list\")  # Lista de objetos AtributoDataset",
        "+ ",
        ")",
        "> ",
        "#constructor",
        "> ",
        "dataset <- function (nombre, atributos) {",
        "+ ",
        "  object <- new(\"Dataset\", nombre=nombre, atributos=atributos)",
        "+ ",
        "  return(object)",
        "+ ",
        "}",
        "> ",
        "validarDataset <- function(object) {",
        "+ ",
        "  #La clase debe ser de tipo character",
        "+ ",
        "  if (!is.character(object@nombre)) {",
        "+ ",
        "    stop(\"El nombre debe ser de tipo character.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  # Atributos deben ser objetos de la clase AtributoDataset",
        "+ ",
        "  if (!all(sapply(object@atributos, function(x) \"AtributoDataset\" %in% class(x)))) {",
        "+ ",
        "    stop(\"Todos los elementos de 'atributos' deben ser de la clase 'AtributoDataset'.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if(length(object@atributos)==0){",
        "+ ",
        "    stop(\"El dataset debe tener una lista de atributos\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  return(TRUE)",
        "+ ",
        "}",
        "> ",
        "setValidity(Class=\"Dataset\", method=validarDataset)",
        "Class \"Dataset\" [in \".GlobalEnv\"]\n\nSlots:\n                          \nName:     nombre atributos\nClass: character      list\n",
        "> ",
        "# Constructor para la clase Dataset",
        "> ",
        "datasetFromCSV <- function(file_path, sep=\",\") {",
        "+ ",
        "  # Leer el archivo CSV en un data.frame",
        "+ ",
        "  df <- read.csv(file_path, sep=sep)",
        "+ ",
        "+ ",
        "  # Crear una lista de objetos AtributoDataset para cada columna del data.frame",
        "+ ",
        "  atributos <- lapply(names(df), function(col_name) {",
        "+ ",
        "    vector <- df[[col_name]]",
        "+ ",
        "+ ",
        "    # Crear un objeto AtributoDataset para cada columna",
        "+ ",
        "    atributo <- atributoDataset(col_name, vector)",
        "+ ",
        "+ ",
        "    return(atributo)",
        "+ ",
        "  })",
        "+ ",
        "+ ",
        "  # Crear el objeto Dataset con la lista de atributos y la clase (si se proporciona)",
        "+ ",
        "  dataset <- new(\"Dataset\", nombre=basename(file_path), atributos = atributos)",
        "+ ",
        "+ ",
        "  return(dataset)",
        "+ ",
        "}",
        "> ",
        "setGeneric(name=\"discretizeEW\", def=function(obj, n_intervals) standardGeneric(\"discretizeEW\"))",
        "[1] \"discretizeEW\"\n",
        "> ",
        "setGeneric(name=\"discretizeEF\", def=function(obj, n_intervals) standardGeneric(\"discretizeEF\"))",
        "[1] \"discretizeEF\"\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            # Aplicar tu función discretizeEW a los valores del objeto",
        "+ ",
        "            discretized_values <- discretizeEW_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            # Retornar un nuevo objeto AtributoDataset con los valores discretizados",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EW)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            discretized_values <- discretizeEF_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EF)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en dataset(nombre = obj@nombre, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "#constructor",
        "> ",
        "dataset <- function (nombre, atributos) {",
        "+ ",
        "  object <- new(\"Dataset\", nombre=nombre, atributos=atributos)",
        "+ ",
        "  return(object)",
        "+ ",
        "}",
        "> ",
        "validarDataset <- function(object) {",
        "+ ",
        "  #La clase debe ser de tipo character",
        "+ ",
        "  if (!is.character(object@nombre)) {",
        "+ ",
        "    stop(\"El nombre debe ser de tipo character.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  # Atributos deben ser objetos de la clase AtributoDataset",
        "+ ",
        "  if (!all(sapply(object@atributos, function(x) \"AtributoDataset\" %in% class(x)))) {",
        "+ ",
        "    stop(\"Todos los elementos de 'atributos' deben ser de la clase 'AtributoDataset'.\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  if(length(object@atributos)==0){",
        "+ ",
        "    stop(\"El dataset debe tener una lista de atributos\")",
        "+ ",
        "  }",
        "+ ",
        "+ ",
        "  return(TRUE)",
        "+ ",
        "}",
        "> ",
        "setValidity(Class=\"Dataset\", method=validarDataset)",
        "Class \"Dataset\" [in \".GlobalEnv\"]\n\nSlots:\n                          \nName:     nombre atributos\nClass: character      list\n",
        "> ",
        "# Constructor para la clase Dataset",
        "> ",
        "datasetFromCSV <- function(file_path, sep=\",\") {",
        "+ ",
        "  # Leer el archivo CSV en un data.frame",
        "+ ",
        "  df <- read.csv(file_path, sep=sep)",
        "+ ",
        "+ ",
        "  # Crear una lista de objetos AtributoDataset para cada columna del data.frame",
        "+ ",
        "  atributos <- lapply(names(df), function(col_name) {",
        "+ ",
        "    vector <- df[[col_name]]",
        "+ ",
        "+ ",
        "    # Crear un objeto AtributoDataset para cada columna",
        "+ ",
        "    atributo <- atributoDataset(col_name, vector)",
        "+ ",
        "+ ",
        "    return(atributo)",
        "+ ",
        "  })",
        "+ ",
        "+ ",
        "  # Crear el objeto Dataset con la lista de atributos y la clase (si se proporciona)",
        "+ ",
        "  dataset <- new(\"Dataset\", nombre=basename(file_path), atributos = atributos)",
        "+ ",
        "+ ",
        "  return(dataset)",
        "+ ",
        "}",
        "> ",
        "setGeneric(name=\"discretizeEW\", def=function(obj, n_intervals) standardGeneric(\"discretizeEW\"))",
        "[1] \"discretizeEW\"\n",
        "> ",
        "setGeneric(name=\"discretizeEF\", def=function(obj, n_intervals) standardGeneric(\"discretizeEF\"))",
        "[1] \"discretizeEF\"\n",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            # Aplicar tu función discretizeEW a los valores del objeto",
        "+ ",
        "            discretized_values <- discretizeEW_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            # Retornar un nuevo objeto AtributoDataset con los valores discretizados",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EW)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"AtributoDataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            if (obj@tipo != \"numeric\" && obj@tipo != \"integer\") {",
        "+ ",
        "              stop(\"El atributo no es numérico o entero, no se puede discretizar.\")",
        "+ ",
        "            }",
        "+ ",
        "            discretized_values <- discretizeEF_base(obj@valores, n_intervals)",
        "+ ",
        "+ ",
        "            return(atributoDataset(paste(obj@nombre,\"- Discretized(EF)\"),discretized_values$vector, discretized_values$cut.points))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(dataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "dataset <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(dataset, 3)",
        "Error en dataset(nombre = obj@nombre, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "#prueba",
        "> ",
        "ds <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(ds, 3)",
        "Error en dataset(nombre = obj@nombre, atributos = atributos_discretized): \n  no se pudo encontrar la función \"dataset\"\n",
        "> ",
        "#constructor",
        "> ",
        "createDataset <- function (nombre, atributos) {",
        "+ ",
        "  object <- new(\"Dataset\", nombre=nombre, atributos=atributos)",
        "+ ",
        "  return(object)",
        "+ ",
        "}",
        "> ",
        "setMethod(f=\"discretizeEF\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj,n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEF(atributo,n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(createDataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "setMethod(f=\"discretizeEW\", signature=\"Dataset\",",
        "+ ",
        "          definition=function(obj, n_intervals) {",
        "+ ",
        "            atributos_discretized <- lapply(obj@atributos, FUN = function(atributo) {",
        "+ ",
        "              if (atributo@tipo == \"numeric\" || atributo@tipo == \"integer\") {",
        "+ ",
        "                return(discretizeEW(atributo, n_intervals))  # Llamar a la implementación de discretize en AtributoDataset",
        "+ ",
        "              }",
        "+ ",
        "              return(atributo)",
        "+ ",
        "            })",
        "+ ",
        "+ ",
        "            return(createDataset(nombre = obj@nombre, atributos = atributos_discretized))",
        "+ ",
        "          })",
        "> ",
        "#prueba",
        "> ",
        "ds <- datasetFromCSV(\"C:/UPV/Master/Analisis de datos/T2/temperat.csv\", sep=\";\")",
        "> ",
        "discretizeEW(ds, 3)",
        "An object of class \"Dataset\"\nSlot \"nombre\":\n[1] \"temperat.csv\"\n\nSlot \"atributos\":\n[[1]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Janvier - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-2.633, 4.033) [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033)\n [6] (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633]  (-Inf, -2.633] \n[11] [4.033, Inf)    (-2.633, 4.033) [4.033, Inf)    (-Inf, -2.633]  (-Inf, -2.633] \n[16] (-Inf, -2.633]  (-2.633, 4.033) (-2.",
        "633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[21] (-2.633, 4.033) (-2.633, 4.033) (-Inf, -2.633]  (-2.633, 4.033) [4.033, Inf)   \n[26] [4.033, Inf)    (-2.633, 4.033) (-2.633, 4.033) (-2.633, 4.033) [4.033, Inf)   \n[31] (-2.633, 4.033) [4.033, Inf)    [4.033, Inf)    (-Inf, -2.633]  (-2.633, 4.033)\nLevels: (-2.633, 4.033) (-Inf, -2.633] [4.033, Inf)\n\nSlot \"cortes\":\n[1] -2.633  4.033\n\n\n[[2]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Fevrier - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"v",
        "alores\":\n [1] (-1.333, 5.233) [5.233, Inf)    (-1.333, 5.233) (-1.333, 5.233) (-1.333, 5.233)\n [6] (-1.333, 5.233) (-1.333, 5.233) (-Inf, -1.333]  (-Inf, -1.333]  (-Inf, -1.333] \n[11] [5.233, Inf)    (-1.333, 5.233) [5.233, Inf)    (-Inf, -1.333]  (-Inf, -1.333] \n[16] (-Inf, -1.333]  (-1.333, 5.233) (-1.333, 5.233) (-1.333, 5.233) [5.233, Inf)   \n[21] (-1.333, 5.233) (-1.333, 5.233) (-Inf, -1.333]  (-1.333, 5.233) [5.233, Inf)   \n[26] [5.233, Inf)    (-1.333, 5.233) (-1.333, 5.233) (-1.333, 5.233) [5.233, I",
        "nf)   \n[31] (-1.333, 5.233) [5.233, Inf)    [5.233, Inf)    (-Inf, -1.333]  (-1.333, 5.233)\nLevels: (-1.333, 5.233) (-Inf, -1.333] [5.233, Inf)\n\nSlot \"cortes\":\n[1] -1.333  5.233\n\n\n[[3]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Mars - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (2.233, 8.167) [8.167, Inf)   (2.233, 8.167) (2.233, 8.167) (2.233, 8.167)\n [6] (-Inf, 2.233]  (2.233, 8.167) (-Inf, 2.233]  (-Inf, 2.233]  (-Inf, 2.233] \n[11] [8.167, Inf)   (2.233, 8.167) [8.167",
        ", Inf)   (-Inf, 2.233]  (-Inf, 2.233] \n[16] (-Inf, 2.233]  (2.233, 8.167) (2.233, 8.167) (-Inf, 2.233]  [8.167, Inf)  \n[21] (2.233, 8.167) (2.233, 8.167) (-Inf, 2.233]  (2.233, 8.167) [8.167, Inf)  \n[26] [8.167, Inf)   (2.233, 8.167) (2.233, 8.167) (2.233, 8.167) [8.167, Inf)  \n[31] (2.233, 8.167) [8.167, Inf)   [8.167, Inf)   (-Inf, 2.233]  (2.233, 8.167)\nLevels: (-Inf, 2.233] (2.233, 8.167) [8.167, Inf)\n\nSlot \"cortes\":\n[1] 2.233 8.167\n\n\n[[4]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Avril ",
        "- Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (7.567, 12.233) [12.233, Inf)   (7.567, 12.233) (7.567, 12.233) (7.567, 12.233)\n [6] (-Inf, 7.567]   (7.567, 12.233) (-Inf, 7.567]   (-Inf, 7.567]   (7.567, 12.233)\n[11] [12.233, Inf)   (7.567, 12.233) (7.567, 12.233) (-Inf, 7.567]   (-Inf, 7.567]  \n[16] (-Inf, 7.567]   (7.567, 12.233) (7.567, 12.233) (-Inf, 7.567]   [12.233, Inf)  \n[21] (7.567, 12.233) (7.567, 12.233) (-Inf, 7.567]   (7.567, 12.233) [12.233, Inf)  \n[26] (7.567, 12.233) (-I",
        "nf, 7.567]   (7.567, 12.233) (7.567, 12.233) [12.233, Inf)  \n[31] [12.233, Inf)   [12.233, Inf)   [12.233, Inf)   (-Inf, 7.567]   (7.567, 12.233)\nLevels: (-Inf, 7.567] (7.567, 12.233) [12.233, Inf)\n\nSlot \"cortes\":\n[1]  7.567 12.233\n\n\n[[5]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Mai - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (11.3, 16.1) [16.1, Inf)  (11.3, 16.1) (11.3, 16.1) [16.1, Inf)  (-Inf, 11.3]\n [7] (-Inf, 11.3] (-Inf, 11.3] (11.3, 16.1) (11.3, 16.1) [16.1, I",
        "nf)  (11.3, 16.1)\n[13] (11.3, 16.1) (11.3, 16.1) (11.3, 16.1) (-Inf, 11.3] (11.3, 16.1) (11.3, 16.1)\n[19] (-Inf, 11.3] [16.1, Inf)  (11.3, 16.1) (11.3, 16.1) (-Inf, 11.3] (11.3, 16.1)\n[25] [16.1, Inf)  (11.3, 16.1) (-Inf, 11.3] (11.3, 16.1) (11.3, 16.1) [16.1, Inf) \n[31] [16.1, Inf)  [16.1, Inf)  [16.1, Inf)  (-Inf, 11.3] (11.3, 16.1)\nLevels: (-Inf, 11.3] (11.3, 16.1) [16.1, Inf)\n\nSlot \"cortes\":\n[1] 11.3 16.1\n\n\n[[6]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Juin - Discretized(EW)\"\n\nSlot \"tip",
        "o\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (14.367, 19.433) [19.433, Inf)    (14.367, 19.433) (14.367, 19.433) [19.433, Inf)   \n [6] (14.367, 19.433) (-Inf, 14.367]   (-Inf, 14.367]   (14.367, 19.433) (14.367, 19.433)\n[11] (14.367, 19.433) (14.367, 19.433) [19.433, Inf)    (14.367, 19.433) (14.367, 19.433)\n[16] (14.367, 19.433) (14.367, 19.433) (14.367, 19.433) (-Inf, 14.367]   [19.433, Inf)   \n[21] (14.367, 19.433) (14.367, 19.433) (14.367, 19.433) (14.367, 19.433) [19.433, Inf)   \n[26] (14.367, 19.433) (-Inf,",
        " 14.367]   (14.367, 19.433) (14.367, 19.433) [19.433, Inf)   \n[31] [19.433, Inf)    [19.433, Inf)    [19.433, Inf)    (14.367, 19.433) (14.367, 19.433)\nLevels: (-Inf, 14.367] (14.367, 19.433) [19.433, Inf)\n\nSlot \"cortes\":\n[1] 14.367 19.433\n\n\n[[7]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Juillet - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (16.533, 21.967) [21.967, Inf)    (16.533, 21.967) (16.533, 21.967) [21.967, Inf)   \n [6] (16.533, 21.967) (-Inf, 16.533]   (16.533",
        ", 21.967) (16.533, 21.967) (16.533, 21.967)\n[11] (16.533, 21.967) (16.533, 21.967) [21.967, Inf)    (16.533, 21.967) (16.533, 21.967)\n[16] (16.533, 21.967) (16.533, 21.967) (16.533, 21.967) (-Inf, 16.533]   [21.967, Inf)   \n[21] (16.533, 21.967) (16.533, 21.967) (16.533, 21.967) (16.533, 21.967) [21.967, Inf)   \n[26] (16.533, 21.967) (-Inf, 16.533]   (16.533, 21.967) (16.533, 21.967) [21.967, Inf)   \n[31] [21.967, Inf)    [21.967, Inf)    [21.967, Inf)    (16.533, 21.967) (16.533, 21.967)\nLevels: (-Inf, 16.",
        "533] (16.533, 21.967) [21.967, Inf)\n\nSlot \"cortes\":\n[1] 16.533 21.967\n\n\n[[8]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Aout - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (16.133, 21.667) [21.667, Inf)    (16.133, 21.667) (16.133, 21.667) (16.133, 21.667)\n [6] (16.133, 21.667) (-Inf, 16.133]   (-Inf, 16.133]   (16.133, 21.667) (16.133, 21.667)\n[11] [21.667, Inf)    (16.133, 21.667) [21.667, Inf)    (16.133, 21.667) (16.133, 21.667)\n[16] (-Inf, 16.133]   (16.133, 21.667) ",
        "(16.133, 21.667) (-Inf, 16.133]   [21.667, Inf)   \n[21] (16.133, 21.667) (16.133, 21.667) (-Inf, 16.133]   (16.133, 21.667) [21.667, Inf)   \n[26] (16.133, 21.667) (-Inf, 16.133]   (16.133, 21.667) (16.133, 21.667) [21.667, Inf)   \n[31] [21.667, Inf)    [21.667, Inf)    [21.667, Inf)    (16.133, 21.667) (16.133, 21.667)\nLevels: (-Inf, 16.133] (16.133, 21.667) [21.667, Inf)\n\nSlot \"cortes\":\n[1] 16.133 21.667\n\n\n[[9]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Septembre - Discretized(EW)\"\n\nSlot \"ti",
        "po\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (13.367, 18.833) [18.833, Inf)    (13.367, 18.833) (13.367, 18.833) (13.367, 18.833)\n [6] (-Inf, 13.367]   (-Inf, 13.367]   (-Inf, 13.367]   (13.367, 18.833) (13.367, 18.833)\n[11] [18.833, Inf)    (13.367, 18.833) [18.833, Inf)    (-Inf, 13.367]   (-Inf, 13.367]  \n[16] (-Inf, 13.367]   (13.367, 18.833) (13.367, 18.833) (-Inf, 13.367]   [18.833, Inf)   \n[21] (13.367, 18.833) (13.367, 18.833) (-Inf, 13.367]   (13.367, 18.833) [18.833, Inf)   \n[26] (13.367, 18.833) (-Inf",
        ", 13.367]   (13.367, 18.833) (13.367, 18.833) [18.833, Inf)   \n[31] [18.833, Inf)    [18.833, Inf)    [18.833, Inf)    (-Inf, 13.367]   (13.367, 18.833)\nLevels: (-Inf, 13.367] (13.367, 18.833) [18.833, Inf)\n\nSlot \"cortes\":\n[1] 13.367 18.833\n\n\n[[10]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Octobre - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (9.467, 14.433) [14.433, Inf)   (9.467, 14.433) (9.467, 14.433) (9.467, 14.433)\n [6] (-Inf, 9.467]   (9.467, 14.433) (-Inf, 9.467",
        "]   (-Inf, 9.467]   (-Inf, 9.467]  \n[11] [14.433, Inf)   (9.467, 14.433) (9.467, 14.433) (-Inf, 9.467]   (-Inf, 9.467]  \n[16] (-Inf, 9.467]   (9.467, 14.433) (-Inf, 9.467]   (-Inf, 9.467]   [14.433, Inf)  \n[21] (9.467, 14.433) (9.467, 14.433) (-Inf, 9.467]   (9.467, 14.433) [14.433, Inf)  \n[26] (9.467, 14.433) (-Inf, 9.467]   (9.467, 14.433) (9.467, 14.433) [14.433, Inf)  \n[31] (9.467, 14.433) [14.433, Inf)   [14.433, Inf)   (-Inf, 9.467]   (-Inf, 9.467]  \nLevels: (-Inf, 9.467] (9.467, 14.433) [14.433, Inf)",
        "\n\nSlot \"cortes\":\n[1]  9.467 14.433\n\n\n[[11]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Novembre - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (4.233, 9.567) [9.567, Inf)   (-Inf, 4.233]  (4.233, 9.567) (4.233, 9.567)\n [6] (-Inf, 4.233]  (4.233, 9.567) (-Inf, 4.233]  (-Inf, 4.233]  (-Inf, 4.233] \n[11] [9.567, Inf)   (4.233, 9.567) (4.233, 9.567) (-Inf, 4.233]  (-Inf, 4.233] \n[16] (-Inf, 4.233]  (4.233, 9.567) (-Inf, 4.233]  (-Inf, 4.233]  [9.567, Inf)  \n[21] (4.233, 9.567)",
        " (4.233, 9.567) (-Inf, 4.233]  (4.233, 9.567) [9.567, Inf)  \n[26] (4.233, 9.567) (4.233, 9.567) (4.233, 9.567) (4.233, 9.567) [9.567, Inf)  \n[31] (4.233, 9.567) [9.567, Inf)   [9.567, Inf)   (-Inf, 4.233]  (-Inf, 4.233] \nLevels: (-Inf, 4.233] (4.233, 9.567) [9.567, Inf)\n\nSlot \"cortes\":\n[1] 4.233 9.567\n\n\n[[12]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Decembre - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (0, 6)    [6, Inf)  (0, 6)    (0, 6)    (0, 6)    (0, 6)    (0, 6)",
        "    (-Inf, 0]\n [9] (-Inf, 0] (-Inf, 0] [6, Inf)  (0, 6)    (0, 6)    (-Inf, 0] (-Inf, 0] (-Inf, 0]\n[17] (0, 6)    (0, 6)    (0, 6)    [6, Inf)  (0, 6)    (0, 6)    (-Inf, 0] (0, 6)   \n[25] [6, Inf)  [6, Inf)  (0, 6)    (0, 6)    (0, 6)    [6, Inf)  (0, 6)    [6, Inf) \n[33] [6, Inf)  (-Inf, 0] (0, 6)   \nLevels: (-Inf, 0] (0, 6) [6, Inf)\n\nSlot \"cortes\":\n[1] 0 6\n\n\n[[13]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Moyenne - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (9.067, ",
        "13.633) [13.633, Inf)   (9.067, 13.633) (9.067, 13.633) (9.067, 13.633)\n [6] (-Inf, 9.067]   (9.067, 13.633) (-Inf, 9.067]   (-Inf, 9.067]   (-Inf, 9.067]  \n[11] [13.633, Inf)   (9.067, 13.633) [13.633, Inf)   (-Inf, 9.067]   (-Inf, 9.067]  \n[16] (-Inf, 9.067]   (9.067, 13.633) (9.067, 13.633) (-Inf, 9.067]   [13.633, Inf)  \n[21] (9.067, 13.633) (9.067, 13.633) (-Inf, 9.067]   (9.067, 13.633) [13.633, Inf)  \n[26] (9.067, 13.633) (-Inf, 9.067]   (9.067, 13.633) (9.067, 13.633) [13.633, Inf)  \n[31] (9.067, 13",
        ".633) [13.633, Inf)   [13.633, Inf)   (-Inf, 9.067]   (-Inf, 9.067]  \nLevels: (-Inf, 9.067] (9.067, 13.633) [13.633, Inf)\n\nSlot \"cortes\":\n[1]  9.067 13.633\n\n\n[[14]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Amplitude - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-Inf, 16]  (16, 21.8)  (16, 21.8)  (-Inf, 16]  [21.8, Inf) (16, 21.8)  (-Inf, 16] \n [8] [21.8, Inf) [21.8, Inf) [21.8, Inf) (-Inf, 16]  (-Inf, 16]  (16, 21.8)  [21.8, Inf)\n[15] [21.8, Inf) (16, 21.8)  (-Inf, 16]",
        "  (16, 21.8)  (-Inf, 16]  (16, 21.8)  (16, 21.8) \n[22] (16, 21.8)  (16, 21.8)  (-Inf, 16]  (-Inf, 16]  (-Inf, 16]  (-Inf, 16]  (16, 21.8) \n[29] (16, 21.8)  (-Inf, 16]  [21.8, Inf) (-Inf, 16]  (-Inf, 16]  [21.8, Inf) (16, 21.8) \nLevels: (-Inf, 16] (16, 21.8) [21.8, Inf)\n\nSlot \"cortes\":\n[1] 16.0 21.8\n\n\n[[15]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Latitude - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (46.167, 55.133) (-Inf, 46.167]   (46.167, 55.133) (46.167, 55.133) (",
        "46.167, 55.133)\n [6] [55.133, Inf)    (46.167, 55.133) [55.133, Inf)    (46.167, 55.133) (46.167, 55.133)\n[11] (-Inf, 46.167]   (46.167, 55.133) (-Inf, 46.167]   (46.167, 55.133) (46.167, 55.133)\n[16] [55.133, Inf)    (46.167, 55.133) (46.167, 55.133) [55.133, Inf)    (-Inf, 46.167]  \n[21] (-Inf, 46.167]   (-Inf, 46.167]   [55.133, Inf)    (46.167, 55.133) (-Inf, 46.167]  \n[26] (-Inf, 46.167]   (46.167, 55.133) (46.167, 55.133) (-Inf, 46.167]   (-Inf, 46.167]  \n[31] (-Inf, 46.167]   (-Inf, 46.167]   (-Inf, ",
        "46.167]   [55.133, Inf)    (46.167, 55.133)\nLevels: (-Inf, 46.167] (46.167, 55.133) [55.133, Inf)\n\nSlot \"cortes\":\n[1] 46.167 55.133\n\n\n[[16]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Longitude - Discretized(EW)\"\n\nSlot \"tipo\":\n[1] \"factor\"\n\nSlot \"valores\":\n [1] (-Inf, 10.1] [20.2, Inf)  (10.1, 20.2) (-Inf, 10.1] (10.1, 20.2) (10.1, 20.2)\n [7] (-Inf, 10.1] [20.2, Inf)  [20.2, Inf)  (10.1, 20.2) (-Inf, 10.1] (-Inf, 10.1]\n[13] (-Inf, 10.1] [20.2, Inf)  (-Inf, 10.1] (10.1, 20.2) (-Inf, 10.1] (10.1",
        ", 20.2)\n[19] [20.2, Inf)  (10.1, 20.2) (10.1, 20.2) [20.2, Inf)  (10.1, 20.2) (-Inf, 10.1]\n[25] (-Inf, 10.1] (-Inf, 10.1] (-Inf, 10.1] (-Inf, 10.1] (-Inf, 10.1] (-Inf, 10.1]\n[31] (-Inf, 10.1] (10.1, 20.2) (-Inf, 10.1] [20.2, Inf)  (-Inf, 10.1]\nLevels: (-Inf, 10.1] (10.1, 20.2) [20.2, Inf)\n\nSlot \"cortes\":\n[1] 10.1 20.2\n\n\n[[17]]\nAn object of class \"AtributoDataset\"\nSlot \"nombre\":\n[1] \"Region\"\n\nSlot \"tipo\":\n[1] \"character\"\n\nSlot \"valores\":\n [1] \"Ouest\" \"Sud\"   \"Ouest\" \"Ouest\" \"Est\"   \"Nord\"  \"Nord\"  \"Nord\"  \"E",
        "st\"   \"Est\"   \"Sud\"  \n[12] \"Nord\"  \"Sud\"   \"Est\"   \"Est\"   \"Nord\"  \"Ouest\" \"Est\"   \"Nord\"  \"Sud\"   \"Sud\"   \"Est\"  \n[23] \"Nord\"  \"Ouest\" \"Sud\"   \"Ouest\" \"Nord\"  \"Ouest\" \"Ouest\" \"Sud\"   \"Sud\"   \"Sud\"   \"Sud\"  \n[34] \"Est\"   \"Ouest\"\n\nSlot \"cortes\":\nNULL\n\n\n\n",
        "> ",
        "knitr::opts_chunk$set(",
        "+ ",
        "  collapse = TRUE,",
        "+ ",
        "  comment = \"#>\"",
        "+ ",
        ")",
        "> ",
        "```{r eval=TRUE}",
        "Error: se intenta usar un nombre de varible de longitud cero\n",
        "> ",
        "build_vignettes()",
        "Error en build_vignettes(): \n  no se pudo encontrar la función \"build_vignettes\"\n",
        "> ",
        "devtools::build_vignettes()",
        "Error en loadNamespace(x): no hay paquete llamado ‘devtools’\nprobando la URL 'https://cran.rstudio.com/bin/windows/Rtools/rtools44/files/rtools44-6104-6039.exe'\nContent type 'application/x-msdownload' length 449027200 bytes (428.2 MB)\ndownloaded 428.2 MB\n\n",
        "\nRestarting R session...\n\n"
    ]
}